{"version":3,"sources":["ui/money-input/money-input.module.css","i18n/index.ts","domain/assert/assert.ts","domain/currency/currency.ts","domain/money/money.ts","domain/fee/fee.ts","domain/exchange-rate/exchange-rate.ts","domain/account/account.ts","stores/account-store.ts","domain/exchange-rate/providers/providers.ts","domain/exchange-rate/providers/fake-rate-provider.ts","domain/exchange-rate/providers/open-exchange-rates-provider.ts","domain/exchange-rate/providers/ecb-provider.ts","domain/format/format.ts","stores/exchange-rate-store.ts","stores/active-tab-store.ts","stores/settings-store.ts","ui/tabs/exchange-form/exchange-form-dropdown.tsx","ui/money-input/money-input.tsx","ui/formatted-money/formatted-money.tsx","ui/balance/balance.tsx","ui/exchange-rate/exchange-rate.tsx","ui/fee/fee.tsx","ui/tabs/exchange-form/exchange-form.tsx","ui/tabs/settings/settings-timer.tsx","ui/tabs/settings/settings-provider.tsx","ui/tabs/settings/settings-non-working-hours.tsx","ui/tabs/settings/settings.tsx","ui/tabs/dashboard/account-list/account-flag.tsx","ui/tabs/dashboard/account-list/account-list-item.tsx","ui/tabs/dashboard/account-list/account-list-item-empty.tsx","ui/tabs/dashboard/account-list/account-list-total-amount.tsx","ui/tabs/dashboard/account-list/account-list.tsx","ui/tabs/dashboard/dashboad.tsx","ui/tabs/rates/rates.tsx","ui/app-tabs.tsx","ui/app-theme.tsx","ui/app.tsx","stores/index.ts","index.tsx","ui/app-tabs.module.css","ui/tabs/dashboard/account-list/account-flag.module.css"],"names":["module","exports","i18n","use","initReactI18next","init","resources","en","translation","lng","interpolation","escapeValue","assert","truthy","message","TypeError","assertCurrencyCode","currencyCode","test","KnownCurrencies","USD","code","symbol","decimals","CAD","EUR","AED","AFN","ALL","AMD","ARS","AUD","AZN","BAM","BDT","BGN","BHD","BIF","BND","BOB","BRL","BWP","BYR","BZD","CDF","CHF","rounding","CLP","CNY","COP","CRC","CVE","CZK","DJF","DKK","DOP","DZD","EEK","EGP","ERN","ETB","GBP","GEL","GHS","GNF","GTQ","HKD","HNL","HRK","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KHR","KMF","KRW","KWD","KZT","LBP","LKR","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MOP","MUR","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SDG","SEK","SGD","SOS","SYP","THB","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","UYU","UZS","VEF","VND","XAF","XOF","YER","ZAR","ZMK","add","a","b","assertMoney","amount","assertIsNotOverflown","subtract","multiply","money","multiplier","Math","round","args","Number","isSafeInteger","Set","map","size","SUM_FEE_LIMIT","SUM_FEE_PERCENTAGE","NON_WORKING_HOURS_DAYS","NON_WORKING_HOURS_PERCENTAGE","applyFees","context","applyTransactionSumFee","applyNonWorkingHoursFee","fn","reduce","acc","curr","includes","dayOfWeek","exchange","targetCurrencyCode","rates","assertExchangePossible","exchangeToMatchSource","sourceCurrencyCode","divider","divide","withdraw","accounts","targetAccountId","account","accountId","deposit","Transaction","sourceAccountId","feeContext","exchangeRates","this","validate","fee","charged","exchanged","getCurrencyCode","moneyToSpend","requiredMoney","getAccount","id","find","AccountStore","action","bound","settings","getFeeContext","Date","getDay","nonWorkingHoursEnabled","using","from","source","to","target","withExchangeRates","withFeeContext","tryExchangeToMatchSource","tryExchange","_","Promise","resolve","setTimeout","loaded","observable","computed","repeat","timeout","cancelled","timeoutId","safeFn","catch","then","clearTimeout","FakeRateProvider","currencyCodes","random","randomizeRates","OpenExchangeRatesProvider","appId","baseUrl","fetcher","axios","create","baseURL","all","base","symbols","filter","x","fetchLatest","result","options","params","app_id","join","get","data","EcbProvider","formatMoney","formatNumber","pow","major","floor","minor","toString","padStart","value","Intl","NumberFormat","format","parse","fixed","trim","replace","success","parsedValue","split","majorUnits","parseInt","minorUnits","i","indexOf","slice","Tab","ExchangeRateStore","repeatCancel","noop","timerDisposer","providerDisposer","loadLatestRates","selectedProvider","latest","runInAction","selectedTimer","intercept","change","newValue","ActiveTabStore","DASHBOARD","EXCHANGE","SETTINGS","RATES","SettingsStore","selectedProviderId","timer","providers","instance","ExchangeFormDropDown","state","anchor","showMenu","event","setState","currentTarget","selectAccount","hideMenu","props","onSelectAccount","selectedAccount","Box","display","alignItems","onClick","Typography","variant","style","verticalAlign","Menu","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","key","selected","React","Component","MoneyInput","ref","selectionFromEnd","onKeyDown","e","selectionStart","selectionEnd","previousChar","isDigit","nextChar","onChange","length","onBlur","onFocus","className","css","input","width","autoFocus","focus","pos","FormattedMoney","formatMoneyWithCurrency","Balance","bad","color","component","i18nKey","ExchangeRate","inject","observer","Skeleton","label","toFixed","Chip","Fee","isZero","ExchangeForm","sourceValue","sourceParsedValue","targetValue","targetParsedValue","sourceToTarget","exchangeToSource","activeTab","goToDashboard","onFocusSource","changeSourceValue","onFocusTarget","changeTargetValue","onBlurSource","onBlurTarget","swap","changeSourceAccount","changeTargetAccount","overBudget","p","mt","justifyContent","mb","IconButton","Button","fullWidth","disabled","SettingsTimer","timers","selectTimer","ListItem","mr","ListItemText","primary","secondary","ml","ButtonGroup","Input","withStyles","theme","createStyles","borderRadius","position","backgroundColor","palette","background","paper","border","padding","maxWidth","minWidth","InputBase","SettingsProvider","onSelectProvider","child","selectProvider","Select","SettingsNonWorkingHours","toggleNonWorkingHours","Switch","checked","Settings","List","ListSubheader","disableSticky","Divider","AccountFlag","toLowerCase","flag","AccountListItem","onTopUp","onExchange","canTopUp","canExchange","Tooltip","title","AccountListItemEmpty","height","AccountListTotalAmount","first","total","AccountList","topUp","goToExchange","Dashboard","Rates","Object","keys","forEach","push","Table","TableHead","TableRow","TableCell","align","TableBody","row","TabPanel","children","AppTabsComponent","t","ratesLoaded","accountsLoaded","Paper","square","tabs","AppBar","bar","Tabs","centered","AppTab","icon","panel","AppTabs","withTranslation","createMuiTheme","main","pink","AppTheme","CssBaseline","stores","ReactDOM","render","useEffect","load","dispose","document","getElementById"],"mappings":"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","file":"static/js/main.2e342b43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"money-input_input__2dtJn\"};","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nconst resources = {\n  en: {\n    translation: {\n      'tab-dashboard': 'Dashboard',\n      'tab-exchange': 'Exchange',\n      'tab-settings': 'Settings',\n      'tab-rates': 'Rates',\n      'settings-title': 'Settings',\n      'settings-timer-primary': 'Refresh each second(s)',\n      'settings-timer-secondary': 'How often to contact FX provider and update the data.',\n      'settings-provider-primary': 'Provider',\n      'settings-provider-secondary': 'Choose FX provider you want to use',\n      'settings-weekend-primary': 'Weekend',\n      'settings-weekend-secondary': 'Enforce weekend time, non working hours fee will apply',\n      'rates-title': 'Live Rates',\n      'rates-currencies': 'Currencies',\n      'rates-rate': 'Rate',\n      'exchange-swap': 'Change currencies',\n      'exchange-exchange': 'Exchange',\n      'accounts-title': 'Accounts',\n      'accounts-top-up': 'Top up account',\n      'accounts-exchange': 'Exchange currency',\n      'balance': 'Balance:',\n      'fee': 'Inc. Fee:',\n      'USD': 'US Dollar',\n      'EUR': 'Euro',\n      'GBP': 'British Pound'\n    }\n  }\n};\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: 'en',\n  interpolation: {\n    escapeValue: false\n  }\n});\n\nexport { i18n };\n","export function assert(truthy: any, message: string) {\n  if (!truthy) {\n    throw new TypeError(message);\n  }\n}\n","import { assert } from '../assert';\n\nexport interface Currency {\n  code: string;\n  symbol: string;\n  decimals?: number;\n  rounding?: number;\n}\n\nexport type Currencies = { [currencyCode: string]: Currency };\n\nexport function assertCurrencyCode(currencyCode: string) {\n  assert(\n    /^[A-Z]{3}$/.test(currencyCode),\n    `Currency code \"${currencyCode}\" doesn't match ISO-4217 format`\n  );\n}\n\nexport const KnownCurrencies: Currencies = {\n  USD: {\n    code: 'USD',\n    symbol: '$',\n    decimals: 2\n  },\n  CAD: {\n    code: 'CAD',\n    symbol: 'CA$',\n    decimals: 2\n  },\n  EUR: {\n    code: 'EUR',\n    symbol: '€',\n    decimals: 2\n  },\n  AED: {\n    code: 'AED',\n    symbol: 'AED',\n    decimals: 2\n  },\n  AFN: {\n    code: 'AFN',\n    symbol: 'Af'\n  },\n  ALL: {\n    code: 'ALL',\n    symbol: 'ALL'\n  },\n  AMD: {\n    code: 'AMD',\n    symbol: 'AMD'\n  },\n  ARS: {\n    code: 'ARS',\n    symbol: 'AR$',\n    decimals: 2\n  },\n  AUD: {\n    code: 'AUD',\n    symbol: 'AU$',\n    decimals: 2\n  },\n  AZN: {\n    code: 'AZN',\n    symbol: 'man.',\n    decimals: 2\n  },\n  BAM: {\n    code: 'BAM',\n    symbol: 'KM',\n    decimals: 2\n  },\n  BDT: {\n    code: 'BDT',\n    symbol: 'Tk',\n    decimals: 2\n  },\n  BGN: {\n    code: 'BGN',\n    symbol: 'BGN',\n    decimals: 2\n  },\n  BHD: {\n    code: 'BHD',\n    symbol: 'BD',\n    decimals: 3\n  },\n  BIF: {\n    code: 'BIF',\n    symbol: 'FBu'\n  },\n  BND: {\n    code: 'BND',\n    symbol: 'BN$',\n    decimals: 2\n  },\n  BOB: {\n    code: 'BOB',\n    symbol: 'Bs',\n    decimals: 2\n  },\n  BRL: {\n    code: 'BRL',\n    symbol: 'R$',\n    decimals: 2\n  },\n  BWP: {\n    code: 'BWP',\n    symbol: 'BWP',\n    decimals: 2\n  },\n  BYR: {\n    code: 'BYR',\n    symbol: 'BYR'\n  },\n  BZD: {\n    code: 'BZD',\n    symbol: 'BZ$',\n    decimals: 2\n  },\n  CDF: {\n    code: 'CDF',\n    symbol: 'CDF',\n    decimals: 2\n  },\n  CHF: {\n    code: 'CHF',\n    symbol: 'CHF',\n    decimals: 2,\n    rounding: 5\n  },\n  CLP: {\n    code: 'CLP',\n    symbol: 'CL$'\n  },\n  CNY: {\n    code: 'CNY',\n    symbol: 'CN¥',\n    decimals: 2\n  },\n  COP: {\n    code: 'COP',\n    symbol: 'CO$'\n  },\n  CRC: {\n    code: 'CRC',\n    symbol: '₡'\n  },\n  CVE: {\n    code: 'CVE',\n    symbol: 'CV$',\n    decimals: 2\n  },\n  CZK: {\n    code: 'CZK',\n    symbol: 'Kč',\n    decimals: 2\n  },\n  DJF: {\n    code: 'DJF',\n    symbol: 'Fdj'\n  },\n  DKK: {\n    code: 'DKK',\n    symbol: 'Dkr',\n    decimals: 2\n  },\n  DOP: {\n    code: 'DOP',\n    symbol: 'RD$',\n    decimals: 2\n  },\n  DZD: {\n    code: 'DZD',\n    symbol: 'DA',\n    decimals: 2\n  },\n  EEK: {\n    code: 'EEK',\n    symbol: 'Ekr',\n    decimals: 2\n  },\n  EGP: {\n    code: 'EGP',\n    symbol: 'EGP',\n    decimals: 2\n  },\n  ERN: {\n    code: 'ERN',\n    symbol: 'Nfk',\n    decimals: 2\n  },\n  ETB: {\n    code: 'ETB',\n    symbol: 'Br',\n    decimals: 2\n  },\n  GBP: {\n    code: 'GBP',\n    symbol: '£',\n    decimals: 2\n  },\n  GEL: {\n    code: 'GEL',\n    symbol: 'GEL',\n    decimals: 2\n  },\n  GHS: {\n    code: 'GHS',\n    symbol: 'GH₵',\n    decimals: 2\n  },\n  GNF: {\n    code: 'GNF',\n    symbol: 'FG'\n  },\n  GTQ: {\n    code: 'GTQ',\n    symbol: 'GTQ',\n    decimals: 2\n  },\n  HKD: {\n    code: 'HKD',\n    symbol: 'HK$',\n    decimals: 2\n  },\n  HNL: {\n    code: 'HNL',\n    symbol: 'HNL',\n    decimals: 2\n  },\n  HRK: {\n    code: 'HRK',\n    symbol: 'kn',\n    decimals: 2\n  },\n  HUF: {\n    code: 'HUF',\n    symbol: 'Ft'\n  },\n  IDR: {\n    code: 'IDR',\n    symbol: 'Rp'\n  },\n  ILS: {\n    code: 'ILS',\n    symbol: '₪',\n    decimals: 2\n  },\n  INR: {\n    code: 'INR',\n    symbol: 'Rs',\n    decimals: 2\n  },\n  IQD: {\n    code: 'IQD',\n    symbol: 'IQD'\n  },\n  IRR: {\n    code: 'IRR',\n    symbol: 'IRR'\n  },\n  ISK: {\n    code: 'ISK',\n    symbol: 'Ikr'\n  },\n  JMD: {\n    code: 'JMD',\n    symbol: 'J$',\n    decimals: 2\n  },\n  JOD: {\n    code: 'JOD',\n    symbol: 'JD',\n    decimals: 3\n  },\n  JPY: {\n    code: 'JPY',\n    symbol: '¥'\n  },\n  KES: {\n    code: 'KES',\n    symbol: 'Ksh',\n    decimals: 2\n  },\n  KHR: {\n    code: 'KHR',\n    symbol: 'KHR',\n    decimals: 2\n  },\n  KMF: {\n    code: 'KMF',\n    symbol: 'CF'\n  },\n  KRW: {\n    code: 'KRW',\n    symbol: '₩'\n  },\n  KWD: {\n    code: 'KWD',\n    symbol: 'KD',\n    decimals: 3\n  },\n  KZT: {\n    code: 'KZT',\n    symbol: 'KZT',\n    decimals: 2\n  },\n  LBP: {\n    code: 'LBP',\n    symbol: 'LB£'\n  },\n  LKR: {\n    code: 'LKR',\n    symbol: 'SLRs',\n    decimals: 2\n  },\n  LTL: {\n    code: 'LTL',\n    symbol: 'Lt',\n    decimals: 2\n  },\n  LVL: {\n    code: 'LVL',\n    symbol: 'Ls',\n    decimals: 2\n  },\n  LYD: {\n    code: 'LYD',\n    symbol: 'LD',\n    decimals: 3\n  },\n  MAD: {\n    code: 'MAD',\n    symbol: 'MAD',\n    decimals: 2\n  },\n  MDL: {\n    code: 'MDL',\n    symbol: 'MDL',\n    decimals: 2\n  },\n  MGA: {\n    code: 'MGA',\n    symbol: 'MGA'\n  },\n  MKD: {\n    code: 'MKD',\n    symbol: 'MKD',\n    decimals: 2\n  },\n  MMK: {\n    code: 'MMK',\n    symbol: 'MMK'\n  },\n  MOP: {\n    code: 'MOP',\n    symbol: 'MOP$',\n    decimals: 2\n  },\n  MUR: {\n    code: 'MUR',\n    symbol: 'MURs'\n  },\n  MXN: {\n    code: 'MXN',\n    symbol: 'MX$',\n    decimals: 2\n  },\n  MYR: {\n    code: 'MYR',\n    symbol: 'RM',\n    decimals: 2\n  },\n  MZN: {\n    code: 'MZN',\n    symbol: 'MTn',\n    decimals: 2\n  },\n  NAD: {\n    code: 'NAD',\n    symbol: 'N$',\n    decimals: 2\n  },\n  NGN: {\n    code: 'NGN',\n    symbol: '₦',\n    decimals: 2\n  },\n  NIO: {\n    code: 'NIO',\n    symbol: 'C$',\n    decimals: 2\n  },\n  NOK: {\n    code: 'NOK',\n    symbol: 'Nkr',\n    decimals: 2\n  },\n  NPR: {\n    code: 'NPR',\n    symbol: 'NPRs',\n    decimals: 2\n  },\n  NZD: {\n    code: 'NZD',\n    symbol: 'NZ$',\n    decimals: 2\n  },\n  OMR: {\n    code: 'OMR',\n    symbol: 'OMR',\n    decimals: 3\n  },\n  PAB: {\n    code: 'PAB',\n    symbol: 'B/.',\n    decimals: 2\n  },\n  PEN: {\n    code: 'PEN',\n    symbol: 'S/.',\n    decimals: 2\n  },\n  PHP: {\n    code: 'PHP',\n    symbol: '₱',\n    decimals: 2\n  },\n  PKR: {\n    code: 'PKR',\n    symbol: 'PKRs'\n  },\n  PLN: {\n    code: 'PLN',\n    symbol: 'zł',\n    decimals: 2\n  },\n  PYG: {\n    code: 'PYG',\n    symbol: '₲'\n  },\n  QAR: {\n    code: 'QAR',\n    symbol: 'QR',\n    decimals: 2\n  },\n  RON: {\n    code: 'RON',\n    symbol: 'RON',\n    decimals: 2\n  },\n  RSD: {\n    code: 'RSD',\n    symbol: 'din.'\n  },\n  RUB: {\n    code: 'RUB',\n    symbol: 'RUB',\n    decimals: 2\n  },\n  RWF: {\n    code: 'RWF',\n    symbol: 'RWF'\n  },\n  SAR: {\n    code: 'SAR',\n    symbol: 'SR',\n    decimals: 2\n  },\n  SDG: {\n    code: 'SDG',\n    symbol: 'SDG',\n    decimals: 2\n  },\n  SEK: {\n    code: 'SEK',\n    symbol: 'Skr',\n    decimals: 2\n  },\n  SGD: {\n    code: 'SGD',\n    symbol: 'S$',\n    decimals: 2\n  },\n  SOS: {\n    code: 'SOS',\n    symbol: 'Ssh'\n  },\n  SYP: {\n    code: 'SYP',\n    symbol: 'SY£'\n  },\n  THB: {\n    code: 'THB',\n    symbol: '฿',\n    decimals: 2\n  },\n  TND: {\n    code: 'TND',\n    symbol: 'DT',\n    decimals: 3\n  },\n  TOP: {\n    code: 'TOP',\n    symbol: 'T$',\n    decimals: 2\n  },\n  TRY: {\n    code: 'TRY',\n    symbol: 'TL',\n    decimals: 2\n  },\n  TTD: {\n    code: 'TTD',\n    symbol: 'TT$',\n    decimals: 2\n  },\n  TWD: {\n    code: 'TWD',\n    symbol: 'NT$',\n    decimals: 2\n  },\n  TZS: {\n    code: 'TZS',\n    symbol: 'TSh'\n  },\n  UAH: {\n    code: 'UAH',\n    symbol: '₴',\n    decimals: 2\n  },\n  UGX: {\n    code: 'UGX',\n    symbol: 'USh'\n  },\n  UYU: {\n    code: 'UYU',\n    symbol: '$U',\n    decimals: 2\n  },\n  UZS: {\n    code: 'UZS',\n    symbol: 'UZS'\n  },\n  VEF: {\n    code: 'VEF',\n    symbol: 'Bs.F.',\n    decimals: 2\n  },\n  VND: {\n    code: 'VND',\n    symbol: '₫'\n  },\n  XAF: {\n    code: 'XAF',\n    symbol: 'FCFA'\n  },\n  XOF: {\n    code: 'XOF',\n    symbol: 'CFA'\n  },\n  YER: {\n    code: 'YER',\n    symbol: 'YR'\n  },\n  ZAR: {\n    code: 'ZAR',\n    symbol: 'R',\n    decimals: 2\n  },\n  ZMK: {\n    code: 'ZMK',\n    symbol: 'ZK'\n  }\n};\n","import { assert } from '../assert/assert';\nimport { assertCurrencyCode } from '../currency';\n\nexport interface Money {\n  amount: number;\n  currencyCode: string;\n}\n\nexport function add(a: Money, b: Money): Money {\n  assertMoney(a, b);\n  const amount = a.amount + b.amount;\n  assertIsNotOverflown(amount);\n  return { currencyCode: a.currencyCode, amount };\n}\n\nexport function subtract(a: Money, b: Money): Money {\n  assertMoney(a, b);\n  const amount = a.amount - b.amount;\n  assertIsNotOverflown(amount);\n  return { currencyCode: a.currencyCode, amount };\n}\n\nexport function multiply(money: Money, multiplier: number): Money {\n  assertMoney(money);\n  const amount = Math.round(money.amount * multiplier);\n  assertIsNotOverflown(amount);\n  return { currencyCode: money.currencyCode, amount };\n}\n\nexport function divide(money: Money, divider: number): Money {\n  assertMoney(money);\n  const amount = Math.round(money.amount / divider);\n  assertIsNotOverflown(amount);\n  return { currencyCode: money.currencyCode, amount };\n}\n\nexport function max(a: Money, b: Money): Money {\n  assertMoney(a, b);\n  return a.amount > b.amount ? a : b;\n}\n\nexport function min(a: Money, b: Money): Money {\n  assertMoney(a, b);\n  return a.amount > b.amount ? b : a;\n}\n\nexport function isZero(money: Money): boolean {\n  assertMoney(money);\n  return money.amount === 0;\n}\n\nexport function isEqual(a: Money, b: Money): boolean {\n  assertMoney(a, b);\n  return a.amount === b.amount;\n}\n\nexport function greaterThanOrEqual(a: Money, b: Money): boolean {\n  assertMoney(a, b);\n  return a.amount >= b.amount;\n}\n\nexport function lessThanOrEqual(a: Money, b: Money): boolean {\n  assertMoney(a, b);\n  return b.amount >= a.amount;\n}\n\nexport function assertMoney(...args: Money[]) {\n  for (const money of args) {\n    assert(money, 'You must specify the money for the operation to complete');\n    assertCurrencyCode(money.currencyCode);\n    assert(Number.isSafeInteger(money.amount), 'Too much money to handle');\n  }\n  const currencies = new Set(args.map(money => money.currencyCode));\n  assert(\n    2 > currencies.size,\n    'Money operation is not allowed between different currencies'\n  );\n}\n\nfunction assertIsNotOverflown(amount: number) {\n  assert(Number.isSafeInteger(amount), 'Money operation will overflow');\n}\n","import { Money, multiply, max } from '../money';\n\nconst SUM_FEE_LIMIT = 10000;\nconst SUM_FEE_PERCENTAGE = 0.05;\nconst NON_WORKING_HOURS_DAYS = [6, 7];\nconst NON_WORKING_HOURS_PERCENTAGE = 0.01;\n\nexport interface FeeContext {\n  dayOfWeek: number;\n}\n\nexport function applyFees(money: Money, context: FeeContext): Money {\n  return [applyTransactionSumFee, applyNonWorkingHoursFee]\n    .map(fn => fn(money, context))\n    .reduce((acc, curr) => {\n      if (!acc) return curr;\n      return max(acc, curr);\n    }, null!);\n}\n\nfunction applyTransactionSumFee(money: Money, context: FeeContext): Money {\n  if (money.amount >= SUM_FEE_LIMIT) {\n    return multiply(money, SUM_FEE_PERCENTAGE);\n  }\n  return {\n    currencyCode: money.currencyCode,\n    amount: 0\n  };\n}\n\nfunction applyNonWorkingHoursFee(money: Money, context: FeeContext): Money {\n  if (NON_WORKING_HOURS_DAYS.includes(context.dayOfWeek)) {\n    return multiply(money, NON_WORKING_HOURS_PERCENTAGE);\n  }\n  return {\n    currencyCode: money.currencyCode,\n    amount: 0\n  };\n}\n","import { Money, multiply, divide, assertMoney } from '../money';\nimport { assert } from '../assert';\nimport { assertCurrencyCode } from '../currency';\n\nexport type ExchangeRates = {\n  [baseCurrencyCode: string]: {\n    [currencyCode: string]: number;\n  };\n};\n\nexport function exchange(\n  money: Money,\n  targetCurrencyCode: string,\n  rates: ExchangeRates\n): Money {\n  assertExchangePossible(money, targetCurrencyCode);\n  return {\n    ...multiply(money, rates[money.currencyCode][targetCurrencyCode]),\n    currencyCode: targetCurrencyCode\n  };\n}\n\nexport function exchangeToMatchSource(\n  money: Money,\n  sourceCurrencyCode: string,\n  rates: ExchangeRates\n): Money {\n  assertExchangePossible(money, sourceCurrencyCode);\n  return {\n    ...divide(money, rates[sourceCurrencyCode][money.currencyCode]),\n    currencyCode: sourceCurrencyCode\n  };\n}\n\nfunction assertExchangePossible(money: Money, currencyCode: string) {\n  assertMoney(money);\n  assertCurrencyCode(currencyCode);\n  assert(\n    money.currencyCode !== currencyCode,\n    'Exchange is possible only between different currencies'\n  );\n}\n","import { assert } from '../assert';\nimport { applyFees, FeeContext } from '../fee/fee';\nimport { Money, subtract, add } from '../money/money';\nimport {\n  ExchangeRates,\n  exchange,\n  exchangeToMatchSource\n} from '../exchange-rate/exchange-rate';\n\nexport interface Account {\n  accountId: string;\n  money: Money;\n}\n\nexport type Accounts = Account[];\n\nexport interface ExchangeTransactionResult {\n  accounts: Accounts;\n  charged: Money;\n  fee: Money;\n  exchanged: Money;\n}\n\nexport function withdraw(\n  accounts: Accounts,\n  targetAccountId: string,\n  money: Money\n): Accounts {\n  return accounts.map(account => {\n    if (account.accountId === targetAccountId) {\n      return {\n        ...account,\n        money: subtract(account.money, money)\n      };\n    }\n    return account;\n  });\n}\n\nexport function deposit(\n  accounts: Accounts,\n  targetAccountId: string,\n  money: Money\n): Accounts {\n  return accounts.map(account => {\n    if (account.accountId === targetAccountId) {\n      return {\n        ...account,\n        money: add(account.money, money)\n      };\n    }\n    return account;\n  });\n}\n\nexport function total(accounts: Accounts, rates: ExchangeRates): Money {\n  const [first, ...rest] = accounts;\n  return rest.reduce((acc, curr) => {\n    return add(acc, exchange(curr.money, first.money.currencyCode, rates));\n  }, first.money);\n}\n\nexport class Transaction {\n  private readonly accounts: Accounts;\n  private sourceAccountId?: string;\n  private targetAccountId?: string;\n  private feeContext?: FeeContext;\n  private exchangeRates?: ExchangeRates;\n\n  static using(accounts: Accounts) {\n    return new Transaction(accounts);\n  }\n\n  constructor(accounts: Accounts) {\n    this.accounts = accounts;\n  }\n\n  from(sourceAccountId: string) {\n    this.sourceAccountId = sourceAccountId;\n    return this;\n  }\n\n  to(targetAccountId: string) {\n    this.targetAccountId = targetAccountId;\n    return this;\n  }\n\n  withFeeContext(feeContext: FeeContext) {\n    this.feeContext = feeContext;\n    return this;\n  }\n\n  withExchangeRates(exchangeRates: ExchangeRates) {\n    this.exchangeRates = exchangeRates;\n    return this;\n  }\n\n  exchange(money: Money): ExchangeTransactionResult {\n    this.validate();\n\n    const fee = applyFees(money, this.feeContext!);\n    const charged = add(money, fee);\n\n    const targetCurrencyCode = this.getCurrencyCode(this.targetAccountId);\n    const exchanged = exchange(money, targetCurrencyCode, this.exchangeRates!);\n\n    let accounts = this.accounts;\n\n    accounts = withdraw(accounts, this.sourceAccountId!, charged);\n    accounts = deposit(accounts, this.targetAccountId!, exchanged);\n\n    return { accounts, charged, exchanged, fee };\n  }\n\n  exchangeToMatchSource(money: Money): ExchangeTransactionResult {\n    this.validate();\n\n    const sourceCurrencyCode = this.getCurrencyCode(this.sourceAccountId);\n    const moneyToSpend = exchangeToMatchSource(\n      money,\n      sourceCurrencyCode,\n      this.exchangeRates!\n    );\n\n    const fee = applyFees(moneyToSpend, this.feeContext!);\n    const requiredMoney = add(moneyToSpend, fee);\n\n    let accounts = this.accounts;\n\n    accounts = withdraw(accounts, this.sourceAccountId!, requiredMoney);\n    accounts = deposit(accounts, this.targetAccountId!, money);\n\n    return { accounts, charged: requiredMoney, exchanged: money, fee };\n  }\n\n  private validate() {\n    assert(this.accounts, 'No accounts');\n    assert(this.getAccount(this.targetAccountId), 'No target account');\n    assert(this.getAccount(this.sourceAccountId), 'No source account');\n    assert(this.feeContext, 'No fee context');\n    assert(this.exchangeRates, 'No exchange rates');\n  }\n\n  private getAccount(id?: string): Account | null {\n    return this.accounts.find(account => account.accountId === id) || null;\n  }\n\n  private getCurrencyCode(id?: string): string {\n    const account = this.getAccount(id);\n    return account!.money.currencyCode;\n  }\n}\n","import { action, observable, computed } from 'mobx';\n\nimport { Money } from '../domain/money';\nimport { Accounts, Transaction, deposit } from '../domain/account';\nimport { ExchangeRates } from '../domain/exchange-rate';\nimport { FeeContext } from '../domain';\nimport { SettingsStore } from './settings-store';\n\nexport class AccountStore {\n  private readonly settings: SettingsStore;\n\n  @observable loaded: boolean = false;\n  @observable accounts: Accounts = [];\n  @observable sourceAccountId: string = '';\n  @observable targetAccountId: string = '';\n\n  constructor(settings: SettingsStore) {\n    this.settings = settings;\n  }\n\n  @computed get source() {\n    return this.accounts.find(_ => _.accountId === this.sourceAccountId);\n  }\n\n  @computed get target() {\n    return this.accounts.find(_ => _.accountId === this.targetAccountId);\n  }\n\n  @computed get all() {\n    return this.accounts;\n  }\n\n  @action.bound tryExchange(money: Money, rates: ExchangeRates) {\n    return Transaction.using(this.accounts)\n      .from(this.source!.accountId)\n      .to(this.target!.accountId)\n      .withExchangeRates(rates)\n      .withFeeContext(this.getFeeContext())\n      .exchange(money);\n  }\n\n  @action.bound tryExchangeToMatchSource(money: Money, rates: ExchangeRates) {\n    return Transaction.using(this.accounts)\n      .from(this.source!.accountId)\n      .to(this.target!.accountId)\n      .withExchangeRates(rates)\n      .withFeeContext(this.getFeeContext())\n      .exchangeToMatchSource(money);\n  }\n\n  @action.bound exchangeToSource(amount: number, rates: ExchangeRates) {\n    const money: Money = {\n      amount,\n      currencyCode: this.target!.money.currencyCode\n    };\n    this.accounts = this.tryExchangeToMatchSource(money, rates).accounts;\n  }\n\n  @action.bound exchange(amount: number, rates: ExchangeRates) {\n    const money: Money = {\n      amount,\n      currencyCode: this.source!.money.currencyCode\n    };\n    this.accounts = this.tryExchange(money, rates).accounts;\n  }\n\n  @action.bound changeSourceAccount(accountId: string) {\n    this.sourceAccountId = accountId;\n    if (this.sourceAccountId === this.targetAccountId) {\n      this.targetAccountId = this.accounts.find(\n        _ => _.accountId !== accountId\n      )!.accountId;\n    }\n  }\n\n  @action.bound changeTargetAccount(accountId: string) {\n    this.targetAccountId = accountId;\n    if (this.targetAccountId === this.sourceAccountId) {\n      this.sourceAccountId = this.accounts.find(\n        _ => _.accountId !== accountId\n      )!.accountId;\n    }\n  }\n\n  @action.bound topUp(accountId: string, amount: number) {\n    const account = this.accounts.find(_ => _.accountId === accountId)!;\n    this.accounts = deposit(this.accounts, accountId, {\n      amount,\n      currencyCode: account.money.currencyCode\n    });\n  }\n\n  @action.bound async load() {\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    this.accounts = [\n      {\n        accountId: '1',\n        money: {\n          amount: 10000,\n          currencyCode: 'USD'\n        }\n      },\n      {\n        accountId: '2',\n        money: {\n          amount: 10000,\n          currencyCode: 'EUR'\n        }\n      },\n      {\n        accountId: '3',\n        money: {\n          amount: 10000,\n          currencyCode: 'GBP'\n        }\n      }\n    ];\n    this.sourceAccountId = '1';\n    this.targetAccountId = '2';\n    this.loaded = true;\n  }\n\n  private getFeeContext = (): FeeContext => {\n    const dayOfWeek = new Date().getDay();\n    return {\n      dayOfWeek: this.settings.nonWorkingHoursEnabled ? 7 : dayOfWeek\n    };\n  };\n}\n","import { ExchangeRates } from '../exchange-rate';\n\nexport interface ExchangeRateProvider {\n  latest(currencyCodes: string[]): Promise<ExchangeRates>;\n}\n\nexport async function timeout(ms: number) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => reject(new Error('Operation timed out')), ms);\n  });\n}\n\nexport type repeatCancelFn = () => void;\nexport type repeatFn = () => Promise<any>;\n\nexport function repeat(fn: repeatFn, timeout: number): repeatCancelFn {\n  if (timeout === 0) {\n    return () => {};\n  }\n  let cancelled = false;\n  let timeoutId = 0;\n  const safeFn = () =>\n    fn()\n      .catch(() => {})\n      .then(() => {\n        if (!cancelled) {\n          timeoutId = setTimeout(safeFn, timeout) as any;\n        }\n      });\n  setTimeout(safeFn, 0);\n  return () => {\n    cancelled = true;\n    clearTimeout(timeoutId);\n  };\n}\n","import { ExchangeRates } from '../exchange-rate';\nimport { ExchangeRateProvider } from './providers';\n\nexport class FakeRateProvider implements ExchangeRateProvider {\n  latest(currencyCodes: string[]): Promise<ExchangeRates> {\n    const rates = currencyCodes.reduce((acc, curr) => {\n      return {\n        ...acc,\n        [curr]: {\n          ...randomizeRates(currencyCodes),\n          [curr]: 1\n        }\n      };\n    }, {});\n    return Promise.resolve(rates);\n  }\n}\n\nfunction randomizeRates(currencyCodes: string[]) {\n  return currencyCodes.reduce((acc, curr) => {\n    return {\n      ...acc,\n      [curr]: 1 + Math.random()\n    }\n  }, {});\n}\n","import axios, { AxiosInstance } from 'axios';\n\nimport { ExchangeRates } from '../exchange-rate';\nimport { ExchangeRateProvider } from './providers';\n\ninterface OpenExchangeRatesLatestResponse {\n  disclaimer: string;\n  license: string;\n  timestamp: number;\n  base: string;\n  rates: {\n    [key: string]: number;\n  };\n}\n\ninterface OpenExchangeRatesProviderConfiguration {\n  appId: string;\n  baseUrl: string;\n}\n\nexport class OpenExchangeRatesProvider implements ExchangeRateProvider {\n  private readonly appId: string;\n  private readonly fetcher: AxiosInstance;\n\n  constructor({ appId, baseUrl }: OpenExchangeRatesProviderConfiguration) {\n    this.appId = appId;\n    this.fetcher = axios.create({ baseURL: baseUrl });\n  }\n\n  async latest(currencyCodes: string[]): Promise<ExchangeRates> {\n    const result = await Promise.all(\n      currencyCodes.map(base => {\n        const symbols = currencyCodes.filter(x => x !== base);\n        return this.fetchLatest(base, symbols);\n      })\n    );\n    return result.reduce((acc, curr) => {\n      return { ...acc, [curr.base]: curr.rates };\n    }, {});\n  }\n\n  private async fetchLatest(\n    base: string,\n    symbols: string[]\n  ): Promise<OpenExchangeRatesLatestResponse> {\n    const options = {\n      params: {\n        app_id: this.appId,\n        base,\n        symbols: symbols.join(',')\n      }\n    };\n    const { data } = await this.fetcher.get('latest.json', options);\n    return data;\n  }\n}\n","import axios, { AxiosInstance } from 'axios';\n\nimport { ExchangeRates } from '../exchange-rate';\nimport { ExchangeRateProvider } from './providers';\n\ninterface EcbLatestResponse {\n  base: string;\n  date: string;\n  rates: {\n    [currencyCode: string]: number;\n  };\n}\n\ninterface EcbProviderConfiguration {\n  baseUrl: string;\n}\n\nexport class EcbProvider implements ExchangeRateProvider {\n  private readonly fetcher: AxiosInstance;\n\n  constructor({ baseUrl }: EcbProviderConfiguration) {\n    this.fetcher = axios.create({ baseURL: baseUrl });\n  }\n\n  async latest(currencyCodes: string[]): Promise<ExchangeRates> {\n    const result = await Promise.all(\n      currencyCodes.map(base => {\n        const symbols = currencyCodes.filter(x => x !== base);\n        return this.fetchLatest(base, symbols);\n      })\n    );\n    return result.reduce((acc, curr) => {\n      return { ...acc, [curr.base]: curr.rates };\n    }, {});\n  }\n\n  private async fetchLatest(\n    base: string,\n    symbols: string[]\n  ): Promise<EcbLatestResponse> {\n    const options = {\n      params: {\n        base,\n        symbols: symbols.join(',')\n      }\n    };\n    return (await this.fetcher.get('latest', options)).data;\n  }\n}\n","import { Money } from '../money';\nimport { KnownCurrencies } from '../currency/currency';\n\nexport function formatMoney(money: Money): string {\n  const { decimals } = KnownCurrencies[money.currencyCode];\n  if (!decimals) {\n    return `${formatNumber(money.amount)}`;\n  }\n  const divider = Math.pow(10, decimals);\n  const major = Math.floor(money.amount / divider);\n  const minor = (money.amount % divider).toString().padStart(decimals, '0');\n  return `${formatNumber(major)}.${minor}`;\n}\n\nexport function formatMoneyWithCurrency(money: Money): string {\n  const { symbol } = KnownCurrencies[money.currencyCode];\n  return `${symbol} ${formatMoney(money)}`;\n}\n\nexport function formatMoneyWithSymbol(money: Money, symbol: string): string {\n  return `${symbol} ${formatMoney(money)}`;\n}\n\nexport function formatNumber(value: number): string {\n  if (typeof Intl !== 'undefined') {\n    return Intl.NumberFormat().format(value);\n  }\n  return value.toString();\n}\n\ninterface ParseResult {\n  success: boolean;\n  value: string;\n  parsedValue: number;\n}\n\nexport function parse(value: string, currencyCode: string): ParseResult {\n  const fixed = value\n    .trim()\n    .replace(/\\s/g, '')\n    .replace(/[^0-9.]/g, '')\n    .replace(/^\\./g, '');\n\n  if (!fixed) {\n    return {\n      success: true,\n      value: '',\n      parsedValue: 0\n    };\n  }\n\n  if (!/^[0-9]+\\.?[0-9]{0,2}$/g.test(fixed)) {\n    return {\n      success: false,\n      value: '',\n      parsedValue: 0\n    };\n  }\n\n  const decimals = KnownCurrencies[currencyCode].decimals || 0;\n\n  const [major, minor] = fixed.split('.');\n  const majorUnits = parseInt(major, 10);\n  const minorUnits = majorUnits * Math.pow(10, decimals) + parseInt(minor || '0', 10);\n\n  const i = fixed.indexOf('.');\n  return {\n    success: true,\n    value: formatNumber(majorUnits) + (i !== -1 ? fixed.slice(i) : ''),\n    parsedValue: minorUnits\n  };\n}","import { observable, action, runInAction, intercept } from 'mobx';\n\nimport { ExchangeRates, repeat, repeatCancelFn } from '../domain';\nimport { SettingsStore } from './settings-store';\n\nconst currencyCodes = ['USD', 'EUR', 'GBP'];\n\nexport class ExchangeRateStore {\n  private repeatCancel: repeatCancelFn = noop;\n  private timerDisposer: any = noop;\n  private providerDisposer: any = noop;\n\n  private readonly settings: SettingsStore;\n\n  @observable\n  loaded: boolean = false;\n\n  @observable\n  rates: ExchangeRates = {};\n\n  constructor(settings: SettingsStore) {\n    this.settings = settings;\n  }\n\n  @action.bound\n  async load() {\n    this.repeatCancel();\n    this.repeatCancel = repeat(\n      this.loadLatestRates,\n      this.settings.selectedTimer * 1000\n    );\n\n    this.timerDisposer();\n    this.timerDisposer = intercept(this.settings, 'selectedTimer', change => {\n      this.repeatCancel();\n      this.repeatCancel = repeat(this.loadLatestRates, change.newValue * 1000);\n      return change;\n    });\n\n    this.providerDisposer();\n    this.providerDisposer = intercept(\n      this.settings,\n      'selectedProviderId',\n      change => {\n        this.repeatCancel();\n        this.repeatCancel = repeat(\n          this.loadLatestRates,\n          this.settings.selectedTimer * 1000\n        );\n        return change;\n      }\n    );\n  }\n\n  loadLatestRates = async () => {\n    try {\n      const rates = await this.settings.selectedProvider.latest(currencyCodes);\n      runInAction(() => {\n        this.rates = rates;\n        this.loaded = true;\n      });\n    } catch (error) {}\n  };\n\n  dispose() {\n    this.providerDisposer();\n    this.providerDisposer = noop;\n    this.timerDisposer();\n    this.timerDisposer = noop;\n    this.repeatCancel();\n    this.repeatCancel = noop;\n  }\n}\n\nfunction noop() {}\n","import { action, observable } from 'mobx';\n\nexport enum Tab {\n  DASHBOARD = 1,\n  EXCHANGE = 2,\n  RATES = 3,\n  SETTINGS = 4\n}\n\nexport class ActiveTabStore {\n  @observable\n  id = Tab.DASHBOARD;\n\n  @action.bound\n  change(id: number) {\n    this.id = id;\n  }\n\n  @action.bound\n  goToDashboard() {\n    this.id = Tab.DASHBOARD;\n  }\n\n  @action.bound\n  goToExchange() {\n    this.id = Tab.EXCHANGE;\n  }\n\n  @action.bound\n  goToSettings() {\n    this.id = Tab.SETTINGS;\n  }\n\n  @action.bound\n  gotToRates() {\n    this.id = Tab.RATES;\n  }\n}\n","import { action, observable, computed } from 'mobx';\n\nimport {\n  FakeRateProvider,\n  EcbProvider,\n  OpenExchangeRatesProvider,\n  ExchangeRateProvider\n} from '../domain';\n\nexport class SettingsStore {\n  @observable\n  timers = [0, 2, 10, 30, 60];\n\n  @observable\n  selectedTimer: number = 10;\n\n  @observable\n  nonWorkingHoursEnabled = false;\n\n  @observable\n  providers = [\n    {\n      id: 'demo',\n      instance: new FakeRateProvider()\n    },\n    {\n      id: 'exchangeratesapi.io',\n      instance: new EcbProvider({\n        baseUrl: 'https://api.exchangeratesapi.io'\n      })\n    },\n    {\n      id: 'openexchangerates.org',\n      instance: new OpenExchangeRatesProvider({\n        appId: '6036b2266d164609b5d74679fba64b28',\n        baseUrl: 'https://openexchangerates.org/api'\n      })\n    }\n  ];\n\n  @observable\n  selectedProviderId = 'demo';\n\n  @computed\n  get selectedProvider(): ExchangeRateProvider {\n    const provider = this.providers.find(\n      ({ id }) => id === this.selectedProviderId\n    );\n    return provider!.instance;\n  }\n\n  @action.bound\n  selectProvider(id: string) {\n    this.selectedProviderId = id;\n  }\n\n  @action.bound\n  selectTimer(timer: number) {\n    this.selectedTimer = timer;\n  }\n\n  @action.bound\n  toggleNonWorkingHours() {\n    this.nonWorkingHoursEnabled = !this.nonWorkingHoursEnabled;\n  }\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport Box from '@material-ui/core/Box';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { Account, Accounts } from '../../../domain';\n\ninterface PropTypes {\n  selectedAccount: Account;\n  accounts: Accounts;\n  onSelectAccount: (accountId: string) => void;\n}\n\nexport class ExchangeFormDropDown extends React.Component<PropTypes> {\n  state = {\n    anchor: null\n  };\n\n  render() {\n    const { selectedAccount, accounts } = this.props;\n    return (\n      <>\n        <Box display='flex' alignItems='center' onClick={this.showMenu}>\n          <Typography variant='h3' style={{ verticalAlign: 'middle' }}>\n            {selectedAccount.money.currencyCode}\n          </Typography>\n          <ArrowDropDownIcon />\n        </Box>\n        <Menu\n          anchorEl={this.state.anchor}\n          keepMounted\n          open={Boolean(this.state.anchor)}\n          onClose={this.hideMenu}\n        >\n          {accounts.map(_ => {\n            return (\n              <MenuItem\n                key={_.money.currencyCode}\n                selected={_.accountId === selectedAccount.accountId}\n                onClick={() => this.selectAccount(_.accountId)}\n              >\n                {_.money.currencyCode}\n              </MenuItem>\n            );\n          })}\n        </Menu>\n      </>\n    );\n  }\n\n  private showMenu = (event: React.MouseEvent<HTMLElement>) => {\n    this.setState({ anchor: event.currentTarget });\n  };\n\n  private selectAccount = (accountId: string) => {\n    this.hideMenu();\n    this.props.onSelectAccount(accountId);\n  };\n\n  private hideMenu = () => {\n    this.setState({ anchor: null });\n  };\n}\n","import React from 'react';\n\nimport css from './money-input.module.css';\n\ninterface PropTypes {\n  value: string;\n  autoFocus?: boolean;\n  onFocus: () => void;\n  onChange: (value: string) => void;\n  onBlur: () => void;\n}\n\ninterface SelectableTarget {\n  target: {\n    value: string;\n    selectionStart: number;\n    selectionEnd: number;\n  };\n}\n\nexport class MoneyInput extends React.Component<PropTypes> {\n  ref: any = null;\n  selectionFromEnd: number = -1;\n\n  render() {\n    const { value, onBlur, onFocus } = this.props;\n    return (\n      <input\n        ref={ref => (this.ref = ref)}\n        value={value}\n        className={css.input}\n        onKeyDown={this.onKeyDown}\n        onChange={this.onChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        style={{\n          width: '100%'\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    if (this.props.autoFocus && this.ref) {\n      this.ref.focus();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.ref && this.selectionFromEnd !== -1) {\n      const pos = this.props.value.length - this.selectionFromEnd;\n      this.ref.selectionStart = pos < 0 ? 0 : pos;\n      this.ref.selectionEnd = this.ref.selectionStart;\n      this.ref = null;\n      this.selectionFromEnd = -1;\n    }\n  }\n\n  private onKeyDown = (\n    e: React.KeyboardEvent<HTMLInputElement> & SelectableTarget\n  ) => {\n    const { target } = e;\n    const { value } = target;\n    if (target.selectionStart !== target.selectionEnd) {\n      return;\n    }\n    if (e.key === 'Backspace') {\n      const previousChar = value[target.selectionStart - 1];\n      if (previousChar && !isDigit(previousChar)) {\n        target.selectionStart--;\n        target.selectionEnd = target.selectionStart;\n        if (previousChar === '.') {\n          target.selectionEnd++;\n        }\n      }\n    }\n    if (e.key === 'Delete') {\n      const nextChar = value[target.selectionStart];\n      if (nextChar && !isDigit(nextChar)) {\n        target.selectionStart++;\n        target.selectionEnd = target.selectionStart + 1;\n        if (nextChar === '.') {\n          target.selectionStart--;\n        }\n      }\n    }\n  };\n\n  private onChange = (\n    e: React.ChangeEvent<HTMLInputElement> & SelectableTarget\n  ) => {\n    this.ref = e.target;\n    this.selectionFromEnd = e.target.value.length - e.target.selectionStart;\n    this.props.onChange(e.target.value);\n  };\n}\n\nfunction isDigit(value: string): boolean {\n  return /[0-9]/.test(value);\n}\n","import React from 'react';\n\nimport { Money, formatMoneyWithCurrency } from '../../domain';\n\ninterface PropTypes {\n  money: Money;\n}\n\nexport class FormattedMoney extends React.Component<PropTypes> {\n  render() {\n    const { money } = this.props;\n    return formatMoneyWithCurrency(money);\n  }\n}\n","import React from 'react';\nimport { Trans } from 'react-i18next';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Money } from '../../domain';\nimport { FormattedMoney } from '../formatted-money';\n\ninterface PropTypes {\n  money: Money;\n  bad?: boolean;\n}\n\nexport function Balance({ money, bad }: PropTypes) {\n  return (\n    <Typography\n      color={bad ? 'error' : 'initial'}\n      component='span'\n      variant='subtitle2'\n    >\n      <Trans i18nKey='balance' /> <FormattedMoney money={money} />\n    </Typography>\n  );\n}\n","import React from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { inject, observer } from 'mobx-react';\nimport Chip from '@material-ui/core/Chip';\n\nimport { ExchangeRateStore } from '../../stores';\nimport { KnownCurrencies } from '../../domain';\n\ninterface PropTypes {\n  from: string;\n  to: string;\n  exchangeRates?: ExchangeRateStore;\n}\n\n@inject('exchangeRates')\n@observer\nexport class ExchangeRate extends React.Component<PropTypes> {\n  render() {\n    const { rates, loaded } = this.props.exchangeRates!;\n    if (!loaded) {\n      return <Skeleton width={100} />;\n    }\n\n    const { from, to } = this.props;\n\n    const label = (\n      <>\n        <span>{KnownCurrencies[from].symbol} 1</span>\n        <span>&nbsp;=&nbsp;</span>\n        <span>\n          {KnownCurrencies[to].symbol} {rates[from][to].toFixed(4)}\n        </span>\n      </>\n    );\n    return <Chip variant='outlined' size='small' label={label} />;\n  }\n}\n","import React from 'react';\nimport { Trans } from 'react-i18next';\n\nimport { Typography } from '@material-ui/core';\n\nimport { Money, isZero } from '../../domain';\nimport { FormattedMoney } from '../formatted-money';\n\ninterface PropTypes {\n  money: Money;\n}\n\nexport function Fee({ money }: PropTypes) {\n  if (money && !isZero(money)) {\n    return (\n      <Typography variant='subtitle2'>\n        <Trans i18nKey='fee' /> <FormattedMoney money={money} />\n      </Typography>\n    );\n  }\n  return null;\n}\n","import React from 'react';\nimport { Trans } from 'react-i18next';\nimport { inject, observer } from 'mobx-react';\nimport { Button, Box } from '@material-ui/core';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport {\n  AccountStore,\n  ExchangeRateStore,\n  ActiveTabStore\n} from '../../../stores';\nimport {\n  greaterThanOrEqual,\n  formatMoney,\n  parse,\n  add,\n  subtract\n} from '../../../domain';\nimport { ExchangeFormDropDown } from './exchange-form-dropdown';\nimport { MoneyInput } from '../../money-input';\nimport { Balance } from '../../balance';\nimport { ExchangeRate } from '../../exchange-rate';\nimport { Fee } from '../../fee';\n\ninterface PropTypes {\n  accounts?: AccountStore;\n  exchangeRates?: ExchangeRateStore;\n  activeTab?: ActiveTabStore;\n}\n\n@inject('accounts', 'exchangeRates', 'activeTab')\n@observer\nexport class ExchangeForm extends React.Component<PropTypes> {\n  state = {\n    sourceValue: '',\n    sourceParsedValue: 0,\n    targetValue: '',\n    targetParsedValue: 0,\n    sourceToTarget: true\n  };\n\n  render() {\n    const {\n      source,\n      target,\n      accounts,\n      changeSourceAccount,\n      changeTargetAccount\n    } = this.props.accounts!;\n\n    let {\n      sourceValue,\n      sourceParsedValue,\n      targetValue,\n      sourceToTarget,\n      targetParsedValue\n    } = this.state;\n\n    let fee = null;\n    let money = null;\n\n    if (sourceToTarget) {\n      if (sourceParsedValue === 0) {\n        targetValue = '';\n      } else {\n        money = {\n          amount: sourceParsedValue,\n          currencyCode: source!.money.currencyCode\n        };\n        const result = this.props.accounts!.tryExchange(\n          money,\n          this.props.exchangeRates!.rates!\n        );\n        fee = result.fee;\n        targetValue = formatMoney(result.exchanged);\n      }\n    } else {\n      if (targetParsedValue === 0) {\n        sourceValue = '';\n      } else {\n        const result = this.props.accounts!.tryExchangeToMatchSource(\n          {\n            amount: targetParsedValue,\n            currencyCode: target!.money.currencyCode\n          },\n          this.props.exchangeRates!.rates!\n        );\n        fee = result.fee;\n        money = result.charged;\n        sourceValue = formatMoney(subtract(result.charged, fee));\n      }\n    }\n\n    const overBudget = !money\n      ? false\n      : !greaterThanOrEqual(source!.money, fee ? add(money, fee) : money);\n\n    return (\n      <Box p={2} mt={2}>\n        <Box display='flex' justifyContent='space-between'>\n          <Box width={300}>\n            <ExchangeFormDropDown\n              selectedAccount={source!}\n              accounts={accounts}\n              onSelectAccount={changeSourceAccount}\n            />\n          </Box>\n          <MoneyInput\n            value={sourceValue}\n            onChange={this.changeSourceValue}\n            onBlur={this.onBlurSource}\n            onFocus={this.onFocusSource(sourceValue)}\n            autoFocus\n          />\n        </Box>\n        <Box display='flex' justifyContent='space-between' mb={2}>\n          <Balance money={source!.money} bad={overBudget} />\n          <Fee money={fee!} />\n        </Box>\n        <Box\n          display='flex'\n          justifyContent='space-between '\n          alignItems='center'\n          mb={2}\n        >\n          <IconButton size='small' onClick={this.swap}>\n            <ImportExportIcon />\n          </IconButton>\n          <ExchangeRate\n            from={source!.money.currencyCode}\n            to={target!.money.currencyCode}\n          />\n        </Box>\n        <Box display='flex' justifyContent='space-between'>\n          <Box width={300}>\n            <ExchangeFormDropDown\n              selectedAccount={target!}\n              accounts={accounts}\n              onSelectAccount={changeTargetAccount}\n            />\n          </Box>\n          <MoneyInput\n            value={targetValue}\n            onFocus={this.onFocusTarget(targetValue)}\n            onChange={this.changeTargetValue}\n            onBlur={this.onBlurTarget}\n          />\n        </Box>\n        <Box mb={2}>\n          <Balance money={target!.money} />\n        </Box>\n        <Box>\n          <Button\n            variant='contained'\n            color='secondary'\n            onClick={this.exchange}\n            fullWidth\n            disabled={overBudget || !money}\n          >\n            <Trans i18nKey='exchange-exchange' />\n          </Button>\n        </Box>\n      </Box>\n    );\n  }\n\n  exchange = () => {\n    const { exchange, exchangeToSource } = this.props.accounts!;\n    const { rates } = this.props.exchangeRates!;\n    if (this.state.sourceToTarget) {\n      exchange(this.state.sourceParsedValue, rates);\n    } else {\n      exchangeToSource(this.state.targetParsedValue, rates);\n    }\n    this.props.activeTab!.goToDashboard();\n  };\n\n  onFocusSource = (value: string) => {\n    return () => this.changeSourceValue(value);\n  };\n\n  onFocusTarget = (value: string) => {\n    return () => this.changeTargetValue(value);\n  };\n\n  changeTargetValue = (value: string) => {\n    const { currencyCode } = this.props.accounts!.target!.money;\n    const result = parse(value, currencyCode);\n    this.setState({ sourceToTarget: false });\n    if (result.success) {\n      this.setState({\n        targetValue: result.value,\n        targetParsedValue: result.parsedValue\n      });\n    }\n  };\n\n  onBlurSource = () => {\n    const { source } = this.props.accounts!;\n    this.setState({\n      sourceValue: formatMoney({\n        currencyCode: source!.money.currencyCode,\n        amount: this.state.sourceParsedValue\n      })\n    });\n  };\n\n  onBlurTarget = () => {\n    const { target } = this.props.accounts!;\n    this.setState({\n      targetValue: formatMoney({\n        currencyCode: target!.money.currencyCode,\n        amount: this.state.targetParsedValue\n      })\n    });\n  };\n\n  changeSourceValue = (value: string) => {\n    const { currencyCode } = this.props.accounts!.source!.money;\n    const result = parse(value, currencyCode);\n    this.setState({ sourceToTarget: true });\n    if (result.success) {\n      this.setState({\n        sourceValue: result.value,\n        sourceParsedValue: result.parsedValue\n      });\n    }\n  };\n\n  private swap = () => {\n    const accounts = this.props.accounts!;\n    const sourceAccountId = accounts.sourceAccountId;\n    const targetAccountId = accounts.targetAccountId;\n    if (this.state.sourceToTarget) {\n      this.setState({\n        targetValue: this.state.sourceValue,\n        targetParsedValue: this.state.sourceParsedValue,\n        sourceToTarget: false\n      });\n    } else {\n      this.setState({\n        sourceValue: this.state.targetValue,\n        sourceParsedValue: this.state.targetParsedValue,\n        sourceToTarget: true\n      });\n    }\n    accounts.changeSourceAccount(targetAccountId);\n    accounts.changeTargetAccount(sourceAccountId);\n  };\n}\n","import React from 'react';\nimport { Trans } from 'react-i18next';\nimport { inject, observer } from 'mobx-react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TimerTwoToneIcon from '@material-ui/icons/TimerTwoTone';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Box from '@material-ui/core/Box';\n\nimport { SettingsStore } from '../../../stores';\n\ninterface PropTypes {\n  settings?: SettingsStore;\n}\n\n@inject('settings')\n@observer\nexport class SettingsTimer extends React.Component<PropTypes> {\n  render() {\n    const { timers, selectedTimer, selectTimer } = this.props.settings!;\n    return (\n      <ListItem>\n        <Box mr={2}>\n          <TimerTwoToneIcon />\n        </Box>\n        <ListItemText\n          primary={<Trans i18nKey='settings-timer-primary' />}\n          secondary={<Trans i18nKey='settings-timer-secondary' />}\n        />\n        <Box ml={2}>\n          <ButtonGroup>\n            {timers.map(timer => (\n              <Button\n                key={timer}\n                disabled={timer === selectedTimer}\n                onClick={() => selectTimer(timer)}\n              >\n                {timer}\n              </Button>\n            ))}\n          </ButtonGroup>\n        </Box>\n      </ListItem>\n    );\n  }\n}\n","import React from 'react';\nimport { Trans } from 'react-i18next';\nimport { inject, observer } from 'mobx-react';\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MonetizationOnTwoToneIcon from '@material-ui/icons/MonetizationOnTwoTone';\nimport Box from '@material-ui/core/Box';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport { SettingsStore } from '../../../stores';\n\nconst Input = withStyles((theme: Theme) =>\n  createStyles({\n    input: {\n      borderRadius: 4,\n      position: 'relative',\n      backgroundColor: theme.palette.background.paper,\n      border: '1px solid #ced4da',\n      padding: '10px 26px 10px 12px',\n      maxWidth: 120,\n      minWidth: 120\n    }\n  })\n)(InputBase);\n\ninterface PropTypes {\n  settings?: SettingsStore;\n}\n\n@inject('settings')\n@observer\nexport class SettingsProvider extends React.Component<PropTypes> {\n  render() {\n    const { providers, selectedProviderId } = this.props.settings!;\n    return (\n      <ListItem>\n        <Box mr={2}>\n          <MonetizationOnTwoToneIcon />\n        </Box>\n        <ListItemText\n          primary={<Trans i18nKey='settings-provider-primary' />}\n          secondary={<Trans i18nKey='settings-provider-secondary' />}\n        />\n        <Box ml={2}>\n          <Select\n            value={selectedProviderId}\n            onChange={this.onSelectProvider}\n            input={<Input />}\n          >\n            {providers.map(({ id }) => (\n              <MenuItem key={id} value={id}>\n                {id}\n              </MenuItem>\n            ))}\n          </Select>\n        </Box>\n      </ListItem>\n    );\n  }\n\n  private onSelectProvider = (\n    event: React.ChangeEvent<{ name?: string; value: unknown }>,\n    child: React.ReactNode\n  ) => {\n    const { selectProvider } = this.props.settings!;\n    selectProvider(event.target.value as string);\n  };\n}\n","import React from 'react';\nimport { Trans } from 'react-i18next';\nimport { inject, observer } from 'mobx-react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TodayTwoToneIcon from '@material-ui/icons/TodayTwoTone';\nimport Box from '@material-ui/core/Box';\nimport Switch from '@material-ui/core/Switch';\n\nimport { SettingsStore } from '../../../stores';\n\ninterface PropTypes {\n  settings?: SettingsStore;\n}\n\n@inject('settings')\n@observer\nexport class SettingsNonWorkingHours extends React.Component<PropTypes> {\n  render() {\n    const {\n      nonWorkingHoursEnabled,\n      toggleNonWorkingHours\n    } = this.props.settings!;\n    return (\n      <ListItem>\n        <Box mr={2}>\n          <TodayTwoToneIcon />\n        </Box>\n        <ListItemText\n          primary={<Trans i18nKey='settings-weekend-primary' />}\n          secondary={<Trans i18nKey='settings-weekend-secondary' />}\n        />\n        <Box ml={2}>\n          <Switch\n            checked={nonWorkingHoursEnabled}\n            onChange={toggleNonWorkingHours}\n          />\n        </Box>\n      </ListItem>\n    );\n  }\n}\n","import React from 'react';\nimport { Trans } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Divider from '@material-ui/core/Divider';\n\nimport { SettingsTimer } from './settings-timer';\nimport { SettingsProvider } from './settings-provider';\nimport { SettingsNonWorkingHours } from './settings-non-working-hours';\n\nexport class Settings extends React.Component {\n  render() {\n    return (\n      <List>\n        <ListSubheader disableSticky>\n          <Trans i18nKey='settings-title' />\n        </ListSubheader>\n        <SettingsTimer />\n        <Divider />\n        <SettingsProvider />\n        <Divider />\n        <SettingsNonWorkingHours />\n      </List>\n    );\n  }\n}\n","import React from 'react';\n\nimport { Account } from '../../../../domain/account';\n\nimport css from './account-flag.module.css';\n\ninterface PropTypes {\n  account: Account;\n}\n\nexport class AccountFlag extends React.Component<PropTypes> {\n  render() {\n    const { account } = this.props;\n    const className = [\n      css[account.money.currencyCode.toLowerCase()],\n      css.flag\n    ].join(' ');\n    return <div className={className} />;\n  }\n}\n","import React from 'react';\nimport { Trans } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExchangeIcon from '@material-ui/icons/AutorenewTwoTone';\nimport ControlPointRoundedIcon from '@material-ui/icons/ControlPointRounded';\n\nimport { FormattedMoney } from '../../../formatted-money';\nimport { Account } from '../../../../domain';\nimport { AccountFlag } from './account-flag';\n\ninterface PropTypes {\n  account: Account;\n  canTopUp: boolean;\n  onTopUp: (accountId: string) => void;\n  canExchange: boolean;\n  onExchange: (accountId: string) => void;\n}\n\nexport class AccountListItem extends React.Component<PropTypes> {\n  render() {\n    const { account, canTopUp, canExchange } = this.props;\n    const { money } = account;\n    return (\n      <ListItem divider>\n        <Box mr={2}>\n          <AccountFlag account={account} />\n        </Box>\n        <ListItemText\n          primary={<Trans i18nKey={money.currencyCode} />}\n          secondary={money.currencyCode}\n        />\n        <Box>\n          <Typography variant='subtitle2'>\n            <FormattedMoney money={money} />\n          </Typography>\n        </Box>\n        <Box ml={2}>\n          <Tooltip title={<Trans i18nKey='accounts-top-up' />}>\n            <span>\n              <IconButton\n                size='small'\n                onClick={this.onTopUp}\n                disabled={!canTopUp}\n              >\n                <ControlPointRoundedIcon />\n              </IconButton>\n            </span>\n          </Tooltip>\n          <Tooltip title={<Trans i18nKey='accounts-exchange' />}>\n            <span>\n              <IconButton\n                size='small'\n                onClick={this.onExchange}\n                disabled={!canExchange}\n              >\n                <ExchangeIcon />\n              </IconButton>\n            </span>\n          </Tooltip>\n        </Box>\n      </ListItem>\n    );\n  }\n\n  private onTopUp = () => {\n    this.props.onTopUp(this.props.account.accountId);\n  };\n\n  private onExchange = () => {\n    this.props.onExchange(this.props.account.accountId);\n  };\n}\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Box from '@material-ui/core/Box';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nexport class AccountListItemEmpty extends React.Component {\n  render() {\n    return (\n      <ListItem>\n        <Box mr={2}>\n          <Skeleton variant='circle' width={24} height={24} />\n        </Box>\n        <ListItemText\n          primary={<Skeleton width={100} component='span' />}\n          secondary={<Skeleton width={50} component='span' />}\n        />\n        <Box display='flex' alignItems='center'>\n          <Skeleton width={100} />\n        </Box>\n      </ListItem>\n    );\n  }\n}\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport { AccountStore, ExchangeRateStore } from '../../../../stores';\nimport { FormattedMoney } from '../../../formatted-money';\nimport { total } from '../../../../domain';\n\ninterface PropTypes {\n  accounts?: AccountStore;\n  exchangeRates?: ExchangeRateStore;\n}\n\n@inject('accounts', 'exchangeRates')\n@observer\nexport class AccountListTotalAmount extends React.Component<PropTypes> {\n  render() {\n    const { accounts, exchangeRates } = this.props;\n\n    if (accounts!.loaded && exchangeRates!.loaded) {\n      const money = total(accounts!.accounts, exchangeRates!.rates);\n      return <FormattedMoney money={money} />;\n    }\n\n    return <Skeleton width={100} />;\n  }\n}\n","import React from 'react';\nimport { Trans } from 'react-i18next';\nimport { inject, observer } from 'mobx-react';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nimport {\n  AccountStore,\n  ExchangeRateStore,\n  ActiveTabStore\n} from '../../../../stores';\nimport { AccountListItem } from './account-list-item';\nimport { AccountListItemEmpty } from './account-list-item-empty';\nimport { AccountListTotalAmount } from './account-list-total-amount';\n\ninterface PropTypes {\n  accounts?: AccountStore;\n  exchangeRates?: ExchangeRateStore;\n  activeTab?: ActiveTabStore;\n}\n\n@inject('accounts', 'exchangeRates', 'activeTab')\n@observer\nexport class AccountList extends React.Component<PropTypes> {\n  render() {\n    const accounts = this.props.accounts!;\n    const exchangeRates = this.props.exchangeRates!;\n    return (\n      <List>\n        <ListSubheader disableSticky>\n          <Box display='flex' justifyContent='space-between'>\n            <span>\n              <Trans i18nKey='accounts-title' />\n            </span>\n            <AccountListTotalAmount />\n          </Box>\n        </ListSubheader>\n        {!accounts.loaded && <AccountListItemEmpty />}\n        {accounts.all.map(account => {\n          return (\n            <AccountListItem\n              key={account.accountId}\n              account={account}\n              canTopUp={true}\n              onTopUp={this.onTopUp}\n              canExchange={exchangeRates.loaded}\n              onExchange={this.onExchange}\n            />\n          );\n        })}\n      </List>\n    );\n  }\n\n  private onTopUp = (accountId: string) => {\n    const accounts = this.props.accounts!;\n    accounts.topUp(accountId, 10000);\n  };\n\n  private onExchange = (accountId: string) => {\n    const accounts = this.props.accounts!;\n    const activeTab = this.props.activeTab!;\n    accounts.changeSourceAccount(accountId);\n    activeTab.goToExchange();\n  };\n}\n","import React from 'react';\n\nimport { AccountList } from './account-list';\n\nexport class Dashboard extends React.Component {\n  render() {\n    return <AccountList />;\n  }\n}\n","import React from 'react';\nimport { Trans } from 'react-i18next';\nimport { inject, observer } from 'mobx-react';\nimport List from '@material-ui/core/List';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport Box from '@material-ui/core/Box';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { ExchangeRateStore } from '../../../stores';\n\ninterface PropTypes {\n  exchangeRates?: ExchangeRateStore;\n}\n\n@inject('exchangeRates')\n@observer\nexport class Rates extends React.Component<PropTypes> {\n  render() {\n    const { rates } = this.props.exchangeRates!;\n    const data: any = [];\n\n    Object.keys(rates).forEach(base => {\n      Object.keys(rates[base]).forEach(target => {\n        if (base !== target) {\n          data.push([base, target, rates[base][target]]);\n        }\n      });\n    });\n\n    return (\n      <List>\n        <ListSubheader>\n          <Trans i18nKey='rates-title' />\n        </ListSubheader>\n        <ListItem>\n          <Table size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <Trans i18nKey='rates-currencies' />\n                </TableCell>\n                <TableCell align='right'>\n                  <Trans i18nKey='rates-rate' />\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map((row: any) => (\n                <TableRow key={`${row[0]}-${row[1]}`}>\n                  <TableCell>\n                    <Box display='flex' alignItems='center'>\n                      {row[0]}\n                      <ArrowRightAltIcon />\n                      {row[1]}\n                    </Box>\n                  </TableCell>\n                  <TableCell align='right'>{row[2].toFixed(4)}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </ListItem>\n      </List>\n    );\n  }\n}\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport AccountsIcon from '@material-ui/icons/AccountBalanceWalletTwoTone';\nimport ExchangeIcon from '@material-ui/icons/AutorenewTwoTone';\nimport SettingsIcon from '@material-ui/icons/SettingsTwoTone';\nimport RatesIcon from '@material-ui/icons/TrendingUpTwoTone';\n\nimport { ExchangeForm } from './tabs/exchange-form';\nimport { Settings } from './tabs/settings';\nimport { Dashboard } from './tabs/dashboard';\nimport { Rates } from './tabs/rates';\nimport {\n  ActiveTabStore,\n  Tab as AppTab,\n  ExchangeRateStore,\n  AccountStore\n} from '../stores';\n\nimport css from './app-tabs.module.css';\n\ninterface TabPanelProps {\n  id: number;\n  value: number;\n  children: JSX.Element;\n}\n\nfunction TabPanel({ id, value, children }: TabPanelProps) {\n  return id === value ? children : null;\n}\n\ninterface PropTypes extends WithTranslation {\n  activeTab?: ActiveTabStore;\n  exchangeRates?: ExchangeRateStore;\n  accounts?: AccountStore;\n}\n\n@inject('activeTab', 'exchangeRates', 'accounts')\n@observer\nclass AppTabsComponent extends React.Component<PropTypes> {\n  render() {\n    const { t } = this.props;\n    const { id, change } = this.props.activeTab!;\n    const ratesLoaded = this.props.exchangeRates!.loaded;\n    const accountsLoaded = this.props.accounts!.loaded;\n    return (\n      <Paper square className={css.tabs}>\n        <AppBar position='static' className={css.bar}>\n          <Tabs\n            value={id}\n            onChange={(_, value) => change(value)}\n            centered\n            variant='fullWidth'\n          >\n            <Tab\n              value={AppTab.DASHBOARD}\n              icon={<AccountsIcon />}\n              label={t('tab-dashboard')}\n            />\n            <Tab\n              value={AppTab.EXCHANGE}\n              icon={<ExchangeIcon />}\n              label={t('tab-exchange')}\n              disabled={!(ratesLoaded && accountsLoaded)}\n            />\n            <Tab\n              value={AppTab.RATES}\n              icon={<RatesIcon />}\n              label={t('tab-rates')}\n              disabled={!ratesLoaded}\n            />\n            <Tab\n              value={AppTab.SETTINGS}\n              icon={<SettingsIcon />}\n              label={t('tab-settings')}\n            />\n          </Tabs>\n        </AppBar>\n        <Box className={css.panel}>\n          <TabPanel id={AppTab.DASHBOARD} value={id}>\n            <Dashboard />\n          </TabPanel>\n          <TabPanel id={AppTab.EXCHANGE} value={id}>\n            <ExchangeForm />\n          </TabPanel>\n          <TabPanel id={AppTab.RATES} value={id}>\n            <Rates />\n          </TabPanel>\n          <TabPanel id={AppTab.SETTINGS} value={id}>\n            <Settings />\n          </TabPanel>\n        </Box>\n      </Paper>\n    );\n  }\n}\n\nexport const AppTabs = withTranslation()(AppTabsComponent);\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport pink from '@material-ui/core/colors/pink';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1976d2'\n    },\n    secondary: pink\n  }\n});\n\nexport const AppTheme: React.FC = ({ children }) => {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </MuiThemeProvider>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Provider } from 'mobx-react';\n\nimport { create } from '../stores';\nimport { AppTabs } from './app-tabs';\nimport { AppTheme } from './app-theme';\n\nconst stores = create();\n\nexport function App() {\n  useEffect(() => {\n    stores.accounts.load();\n    stores.exchangeRates.load();\n    return () => stores.exchangeRates.dispose();\n  }, []);\n  return (\n    <Provider {...stores}>\n      <AppTheme>\n        <AppTabs />\n      </AppTheme>\n    </Provider>\n  );\n}\n","import { AccountStore } from './account-store';\nimport { ExchangeRateStore } from './exchange-rate-store';\nimport { ActiveTabStore, Tab } from './active-tab-store';\nimport { SettingsStore } from './settings-store';\n\nfunction create() {\n  const settings = new SettingsStore();\n  const exchangeRates = new ExchangeRateStore(settings);\n  const activeTab = new ActiveTabStore();\n  const accounts = new AccountStore(settings);\n  return { accounts, exchangeRates, activeTab, settings };\n}\n\nexport {\n  AccountStore,\n  ExchangeRateStore,\n  ActiveTabStore,\n  Tab,\n  SettingsStore,\n  create\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './i18n';\nimport { App } from './ui/app';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"app-tabs_tabs__3Uj3V\",\"bar\":\"app-tabs_bar__3i8cQ\",\"panel\":\"app-tabs_panel__3AsRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flag\":\"account-flag_flag__3uEoT\",\"eur\":\"account-flag_eur__5gXMN\",\"usd\":\"account-flag_usd__HqaGb\",\"gbp\":\"account-flag_gbp__2SRbQ\"};"],"sourceRoot":""}